@inproceedings{Daily:Scipy2011:2011,
	author = {Daily, Jeff},
	booktitle = {SciPy 2011},
	title = {High Performance Parallel Computing in Python using NumPy and the Global Arrays Toolkit},
	uuid = {457A9E77-30F3-4E32-8447-396D947048D7},
	year = {2011},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown}
}
@inproceedings{Terry:Scipy2011:2011,
	author = {Terry, Matt  and Koning, Joseph},
	booktitle = {SciPy 2011},
	title = {Automation of Inertial Fusion Target Design with Python},
	uuid = {C17115D3-F890-4F6B-A83A-E3023FCACB6B},
	year = {2011},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown}
}
@article{cai2005performance,
	author = {Cai, X.  and Langtangen, H. P.  and Moe, H.},
	title = {On the performance of the Python programming language for serial and parallel scientific computations},
	journal = {Scientific Programming},
	uuid = {2C205E53-0681-4815-8677-598BB30B24FF},
	volume = {13},
	number = {1},
	pages = {31-56},
	publisher = {IOS Press},
	year = {2005},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Cai/2005/On%20the%20performance%20of%20the%20Python%20programming%20langu.pdf,Sente,},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {pEQMlI1yQB4J},
	Web_data_source = {Google Scholar}
}
@inproceedings{sverre2009fast,
	author = {Sverre, D.},
	booktitle = {Proceedings of the 8th Python in Science Conference},
	title = {Fast numerical computations with Cython},
	uuid = {BA428813-D629-42F1-B304-2C45AD0D62C0},
	number = {SciPy},
	pages = {15-22},
	year = {2009},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Sverre/2009/Fast%20numerical%20computations%20with%20Cython.pdf,Sente,},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown},
	Web_data_source = {Google Scholar},
	notes = {(20) A discussion of parallel computing capabilities. At time of writing, OpenMP not supported. shared memory discussed, python GIL. In this paper, they have functionality to release the gil, but no openmp support.

They do discuss MPI, namely mpi4py.  they discuss how to use mpi, we can use cimport mpi.(18) we can use SSE vectorization(15) (20) (19) they successfully used vectorization after massaging the output c with the intel compiler}
}
@inproceedings{sala2006pytrilinos,
	author = {Sala, M.  and Spotz, W. F.  and Heroux, M. A.},
	booktitle = {Proceedings of the 8th international conference on Applied parallel computing: state of the art in scientific computing},
	title = {PyTrilinos: High-performance distributed-memory solvers for Python},
	uuid = {CA894ED1-4A76-4A3E-94FD-EF716255C69B},
	pages = {966-975},
	organization = {Springer-Verlag},
	year = {2006},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Sala/2006/PyTrilinos%20High-performance%20distributed-memory%20so.pdf,Sente,},
	url = {},
	keywords = {performance python;python;HPC},
	tags = {python;HPC;performance python},
	Web_data_source = {Google Scholar},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {hVMBV\_EvLywJ}
}
@article{wilbers2009using,
	author = {Wilbers, I. M.  and Langtangen, H. P.  and Ødegård, Å.},
	title = {Using cython to speed up numerical python programs},
	journal = {Proceedings of MekIT},
	uuid = {4FBE27FF-C8C9-4733-A2BB-ED798ED52C1D},
	volume = {9},
	year = {2009},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Wilbers/2009/Using%20cython%20to%20speed%20up%20numerical%20python%20programs.pdf,Sente,},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown},
	Web_data_source = {Google Scholar},
	notes = {(3) (2) (1) We address this in our blog post. Python being limited for computational speed(12) Many binary ops in vectorizing python(15) (1) (15) We can inline fortran code}
}
@inproceedings{alghamdi2011pet,
	author = {Alghamdi, A.  and Ahmadia, A.  and Ketcheson, D.  and Knepley, M.  and Mandli, K.  and Dalcin, L.},
	booktitle = {proceedings of HPC},
	title = {Pet-Claw: A Scalable Parallel Nonlinear Wave Propagation Solver for Python, ACM, 2011},
	uuid = {1706C962-F226-4778-97FB-72B2AEA402FE},
	year = {2011},
	url = {},
	keywords = {performance python;python;HPC},
	tags = {python;HPC;performance python},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {wpkHrU958FUJ},
	Web_data_source = {Google Scholar}
}
@inproceedings{rabenseifner2009hybrid,
	author = {Rabenseifner, R.  and Hager, G.  and Jost, G.},
	booktitle = {Parallel, Distributed and Network-based Processing, 2009 17th Euromicro International Conference on},
	title = {Hybrid MPI/OpenMP parallel programming on clusters of multi-core SMP nodes},
	uuid = {942E3E46-BCD7-4519-90EB-B7F362C7AE86},
	pages = {427-436},
	organization = {IEEE},
	year = {2009},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Rabenseifner/2009/Hybrid%20MPI_OpenMP%20parallel%20programming%20on%20clusters.pdf,Sente,},
	url = {},
	keywords = {performance python;HPC},
	tags = {HPC;performance python},
	Web_data_source = {Google Scholar},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {75htfxwyeD0J}
}
@article{klockner2011pycuda,
	author = {Klöckner, A.  and Pinto, N.  and Lee, Y.  and Catanzaro, B.  and Ivanov, P.  and Fasih, A.},
	title = {PyCUDA and PyOpenCL: A Scripting-Based Approach to GPU Run-Time Code Generation},
	journal = {Parallel Computing},
	uuid = {50B38FBD-B839-4E09-B901-C14962FF4C58},
	publisher = {Elsevier},
	year = {2011},
	url = {},
	keywords = {performance python;heterogeneous;python;HPC},
	tags = {python;HPC;performance python;heterogeneous},
	Web_data_source = {Google Scholar},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {4F2HjQ8gH4IJ}
}
@book{Munshi:OpenclProgrammingGuide:2011,
	author = {Munshi, Aaftab},
	title = {OpenCL programming guide},
	uuid = {7B0BCD6D-F600-4022-AC97-0125AAB48013},
	pages = {603},
	publisher = {Pearson Education},
	address = {Upper Saddle River, NJ},
	year = {2011},
	US_LoC_Call = {QA76.73.O213O64 2012},
	lccn = {2011016523},
	ISBN = {0321749642},
	OCLCID = {ocn682896781},
	sentelink = {{http://lccn.loc.gov/2011016523},Library of Congress,Permalink},
	url = {},
	keywords = {Computers › Programming › GeneralComputers;Data Processing;performance python;Parallel ProcessingComputers;GeneralOpenCL (Computer program language);Programming Languages;heterogeneous;Digital Media;Computer GraphicsComputers;GeneralComputers;HPC;Video & AnimationComputers;Programming},
	tags = {HPC;performance python;heterogeneous},
	Medium_consulted = {Web},
	GoogleBooks_key = {M-Sve\_KItQwC},
	Web_data_source = {Google Books},
	publicationStatus = {Unknown},
	Edition = {illustrated}
}
@article{miller2002pympi,
	author = {Miller, P.},
	title = {pyMPI--An introduction to parallel Python using MPI},
	journal = {Lawrence Livermore National Laboratory report UCRL-WEB-151052},
	uuid = {CDDD9E62-7C7E-4E7B-8AE9-03199C64D0BC},
	year = {2002},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Miller/2002/pyMPI--An%20introduction%20to%20parallel%20Python%20using%20MP.pdf,Sente,},
	url = {},
	keywords = {performance python;python;HPC},
	tags = {python;HPC;performance python},
	Web_data_source = {Google Scholar},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {nFayy7-HogsJ}
}
@article{dalcin2008mpi,
	author = {Dalcín, L.  and Paz, R.  and Storti, M.  and D'Elía, J.},
	title = {MPI for Python: Performance improvements and MPI-2 extensions},
	journal = {Journal of Parallel and Distributed Computing},
	uuid = {FD74AA15-29B3-4678-BA6A-18ACE2052356},
	volume = {68},
	number = {5},
	pages = {655-662},
	publisher = {Elsevier},
	year = {2008},
	doi = {10.1016/j.jpdc.2007.09.005},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Dalc%C3%ADn/2008/MPI%20for%20Python%20Performance%20improvements%20and%20MPI-2.pdf,Sente,},
	url = {},
	keywords = {performance python;python;HPC},
	tags = {python;HPC;performance python},
	publicationStatus = {Unknown},
	Web_data_source = {Google Scholar}
}
@article{nieplocha2006advances,
	author = {Nieplocha, J.  and Palmer, B.  and Tipparaju, V.  and Krishnan, M.  and Trease, H.  and Aprà, E.},
	title = {Advances, applications and performance of the global arrays shared memory programming toolkit},
	journal = {International Journal of High Performance Computing Applications},
	uuid = {56F8E528-D817-47AC-BCA8-8F886808EEE8},
	volume = {20},
	number = {2},
	pages = {203},
	publisher = {SAGE Publications},
	year = {2006},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Nieplocha/2006/Advances%2C%20applications%20and%20performance%20of%20the%20glob.pdf,Sente,},
	url = {},
	keywords = {performance python;HPC},
	tags = {HPC;performance python},
	Web_data_source = {Google Scholar},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {pCYSDedfF8IJ}
}
@book{Gaster:HeterogeneousComputingWithOpencl:2011,
	author = {Gaster, Benedict  and Howes, Lee  and Kaeli, David R.  and Mistry, Perhaad  and Schaa, Dana},
	title = {Heterogeneous Computing with OpenCL},
	uuid = {D21FB60F-EF92-4490-A9BD-43B9F112F47A},
	pages = {296},
	publisher = {Elsevier},
	address = {Burlington},
	year = {2011},
	ISBN = {0123877679},
	RIS_reference_number = {749264756},
	url = {http://public.eblib.com/EBLPublic/PublicView.do?ptiID=767269},
	keywords = {Computers › Systems Architecture › GeneralComputers;Data Processing;performance python;Parallel ProcessingComputers;heterogeneous;Systems Architecture;ParallelComputers;GeneralComputers;General;Software Development & Engineering;HPC;Programming},
	tags = {HPC;performance python;heterogeneous},
	Medium_consulted = {Web},
	GoogleBooks_key = {qa73rNA7drYC},
	Web_data_source = {Google Books},
	publicationStatus = {Unknown},
	All_ISBNs = {9780123877673 0123877679},
	abstract = {Heterogeneous Computing with OpenCL teaches OpenCL and parallel programming for complex systems that may include a variety of device architectures: multi-core CPUs, GPUs, and fully-integrated Accelerated Processing Units (APUs) such as AMD Fusion technology. Designed to work on multiple platforms and with wide industry support, OpenCL will help you more effectively program for a heterogeneous future. Written by leaders in the parallel computing and OpenCL communities, this book will give you hands-on OpenCL experience to address a range of fundamental parallel algorithms. The authors explore m.}
}
@inproceedings{unpingco2008user,
	author = {Unpingco, J.},
	booktitle = {DoD HPCMP Users Group Conference 2008},
	title = {User Friendly High Productivity Computational Workflows Using the VISION/HPC Prototype},
	uuid = {637A9A6E-CF8C-4E0E-8CEC-93D3177F526D},
	pages = {387-390},
	organization = {IEEE},
	year = {2008},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Unpingco/2008/User%20Friendly%20High%20Productivity%20Computational%20Work.pdf,Sente,},
	url = {},
	keywords = {performance python;python;HPC},
	tags = {python;HPC;performance python},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {iPaoHRC5zBEJ},
	Web_data_source = {Google Scholar}
}
@article{perez2011python,
	author = {Pérez, F.  and Granger, B.  and Hunter, J.},
	title = {Python: an ecosystem for scientific computing},
	journal = {Computing in Science \& Engineering},
	uuid = {FCC75209-8449-4875-8C4F-81BA6F0F2F5D},
	number = {99},
	pages = {1-1},
	publisher = {IEEE},
	year = {2011},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/P%C3%A9rez/2011/Python%20an%20ecosystem%20for%20scientific%20computing.pdf,Sente,},
	url = {},
	keywords = {scientific computing;performance python;python;HPC},
	tags = {python;scientific computing;HPC;performance python},
	publicationStatus = {Unknown},
	Google_Scholar_BibTeX_export_key = {U3xABRb2PGUJ},
	Web_data_source = {Google Scholar},
	notes = {(13) (10) This is a clear indication that with the availability of computational resources, we can now make use of the interactive features and brevity 

the edit/compile/run cycle is obsolete(13) (11) We can easily add tools to extend the functionality of (11) born in the early 1990s, originally python developed as a pedagogic tool. wanted it to be easy to use in multimedia and OS research projects.  access to platform capabilities(14)}
}
@article{behnel2011cython,
	author = {Behnel, S.  and Bradshaw, R.  and Citro, C.  and Dalcin, L.  and Seljebotn, D.  and Smith, K.},
	title = {Cython: The best of both worlds},
	journal = {Computing in Science \& Engineering},
	uuid = {B4C3688A-116D-40FD-B315-6F6B1EA404AE},
	number = {99},
	pages = {1-1},
	publisher = {IEEE},
	year = {2011},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Behnel/2011/Cython%20The%20best%20of%20both%20worlds.pdf,Sente,},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown},
	Web_data_source = {Google Scholar}
}
@article{perez2007ipython,
	author = {Perez, F.  and Granger, B. E.},
	title = {IPython: a system for interactive scientific computing},
	journal = {Computing in Science \& Engineering},
	uuid = {03E125CA-638F-437D-8870-451167F58262},
	pages = {21-29},
	publisher = {IEEE Computer Society},
	year = {2007},
	sentelink = {file://localhost/Users/rcloud/Documents/Sente/All.sente6lib/Contents/Attachments/Perez/2007/IPython%20a%20system%20for%20interactive%20scientific%20compu.pdf,Sente,},
	url = {},
	keywords = {performance python;python},
	tags = {python;performance python},
	publicationStatus = {Unknown},
	Web_data_source = {Google Scholar}
}

@inproceedings{handsonopenmp,
    author = {Mattson, T. and Meadows, L.},
    title = {A "Hands-on" Introduction to OpenMP},
    pages = {120},
    url = {http://www.openmp.org/mp-documents/omp-hands-on-SC08.pdf}
}

@article{pep3118,
    author={Oliphant, T. and Banks, C.},
    title={PEP 3118 - Revising the buffer protocol},
    url={http://www.python.org/dev/peps/pep-3118/}
}
